You are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element. Notice that the index of the elements may change after the removal.

For example, if nums = [6,1,7,4,1]:

Choosing to remove index 1 results in nums = [6,7,4,1].
Choosing to remove index 2 results in nums = [6,1,4,1].
Choosing to remove index 4 results in nums = [6,1,7,4].
An array is fair if the sum of the odd-indexed values equals the sum of the even-indexed values.

Return the number of indices that you could choose such that after the removal, nums is fair.
Example 1 :-
Input: nums = [2,1,6,4]
Output: 1
Explanation:
Remove index 0: [1,6,4] -> Even sum: 1 + 4 = 5. Odd sum: 6. Not fair.
Remove index 1: [2,6,4] -> Even sum: 2 + 4 = 6. Odd sum: 6. Fair.
Remove index 2: [2,1,4] -> Even sum: 2 + 4 = 6. Odd sum: 1. Not fair.
Remove index 3: [2,1,6] -> Even sum: 2 + 6 = 8. Odd sum: 1. Not fair.
There is 1 index that you can remove to make nums fair.
Example 2:

Input: nums = [1,1,1]
Output: 3
Explanation: You can remove any index and the remaining array is fair.

Approach :- 
We will split the array into two parts, left and right.
Firstly we count the sum to an array right,
where right[0] = A[0] + A[2] +...
and right[1] = A[1] + A[3] +...

Now we iterates the whole array A, and try to split at each A[i].
When move one element from right to left,
we reduce the sum in right,
check the if it's fair,
then increse the sum in left.


Code :- 

class Solution {
    public int waysToMakeFair(int[] nums) {
        int res = 0;
        int left[] = new int[2];
        int right[] = new int[2];
        
        for(int i=0;i<nums.length;i++){
            right[i%2] += nums[i];
        }
        
        for(int i=0;i<nums.length;i++){
            right[i%2] -= nums[i];
            if(left[0] + right[1] == right[0] + left[1]){
                res++;
            }
            left[i%2] += nums[i];
        }
        
        return res;
    }
}